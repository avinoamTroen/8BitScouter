{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ChoiceList = function ChoiceList(props) {\n  var _useState = useState(props.getCurrentChoice()),\n      _useState2 = _slicedToArray(_useState, 2),\n      localCurrentChoice = _useState2[0],\n      setLocalCurrentChoice = _useState2[1];\n\n  var onValueChange = function onValueChange(itemValue, itemIndex) {\n    props.setCurrentChoice(itemValue);\n    setLocalCurrentChoice(props.getCurrentChoice());\n  };\n\n  pickerItemArray = props.array.map(function (item) {\n    return _jsx(Picker.Item, {\n      label: item.toString(),\n      value: item\n    }, item);\n  });\n  return _jsx(Picker, {\n    selectedValue: localCurrentChoice,\n    style: {\n      height: 150,\n      width: '100%'\n    },\n    onValueChange: onValueChange,\n    children: pickerItemArray\n  });\n};\n\nvar TitledChoiceList = function TitledChoiceList(props) {\n  return _jsxs(View, {\n    style: styles.choiceListContainer,\n    children: [_jsx(Text, {\n      style: styles.choiceListTitle,\n      children: props.title\n    }), _jsx(ChoiceList, {\n      getCurrentChoice: props.getCurrentChoice,\n      setCurrentChoice: props.setCurrentChoice,\n      array: props.array\n    })]\n  });\n};\n\nexport default TitledChoiceList;\nvar styles = StyleSheet.create({\n  choiceListTitle: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  choiceListContainer: {\n    flex: 1,\n    backgroundColor: 'dodgerblue',\n    borderColor: 'black',\n    borderWidth: 2,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/myComponents/ChoiceList.js"],"names":["React","useState","Picker","ChoiceList","props","getCurrentChoice","localCurrentChoice","setLocalCurrentChoice","onValueChange","itemValue","itemIndex","setCurrentChoice","pickerItemArray","array","map","item","toString","height","width","TitledChoiceList","styles","choiceListContainer","choiceListTitle","title","StyleSheet","create","flex","fontSize","fontWeight","backgroundColor","borderColor","borderWidth","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,MAAT,QAAuB,6BAAvB;;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACjC,kBAAoDH,QAAQ,CAACG,KAAK,CAACC,gBAAN,EAAD,CAA5D;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC5CN,IAAAA,KAAK,CAACO,gBAAN,CAAuBF,SAAvB;AACAF,IAAAA,qBAAqB,CAACH,KAAK,CAACC,gBAAN,EAAD,CAArB;AACH,GAHD;;AAIAO,EAAAA,eAAe,GAAGR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAU;AACxC,WACI,KAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,IAAI,CAACC,QAAL,EAApB;AAAqC,MAAA,KAAK,EAAED;AAA5C,OAAuDA,IAAvD,CADJ;AAGH,GAJiB,CAAlB;AAMA,SACI,KAAC,MAAD;AACI,IAAA,aAAa,EAAET,kBADnB;AAEI,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAFX;AAGI,IAAA,aAAa,EAAEV,aAHnB;AAAA,cAKKI;AALL,IADJ;AAUH,CAtBM;;AAwBP,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACf,KAAD,EAAW;AAChC,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAEgB,MAAM,CAACC,mBADlB;AAAA,eAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA,gBAAsClB,KAAK,CAACmB;AAA5C,MAFJ,EAGI,KAAC,UAAD;AACI,MAAA,gBAAgB,EAAEnB,KAAK,CAACC,gBAD5B;AAEI,MAAA,gBAAgB,EAAED,KAAK,CAACO,gBAF5B;AAGI,MAAA,KAAK,EAAEP,KAAK,CAACS;AAHjB,MAHJ;AAAA,IADJ;AAYH,CAbD;;AAeA,eAAeM,gBAAf;AACA,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,eAAe,EAAE;AACbI,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,QAAQ,EAAE,EAFG;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADY;AAM7BP,EAAAA,mBAAmB,EAAE;AACjBK,IAAAA,IAAI,EAAE,CADW;AAEjBG,IAAAA,eAAe,EAAE,YAFA;AAGjBC,IAAAA,WAAW,EAAE,OAHI;AAIjBC,IAAAA,WAAW,EAAE,CAJI;AAKjBC,IAAAA,UAAU,EAAE;AALK;AANQ,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nexport const ChoiceList = (props) => {\r\n    const [localCurrentChoice, setLocalCurrentChoice] = useState(props.getCurrentChoice())\r\n    const onValueChange = (itemValue, itemIndex) => {\r\n        props.setCurrentChoice(itemValue);\r\n        setLocalCurrentChoice(props.getCurrentChoice())\r\n    }\r\n    pickerItemArray = props.array.map((item) => {\r\n        return (\r\n            <Picker.Item label={item.toString()} value={item} key={item} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Picker\r\n            selectedValue={localCurrentChoice}\r\n            style={{ height: 150, width: '100%' }}\r\n            onValueChange={onValueChange}\r\n        >\r\n            {pickerItemArray}\r\n        </Picker>\r\n    )\r\n\r\n}\r\n\r\nconst TitledChoiceList = (props) => {\r\n    return (\r\n        <View\r\n            style={styles.choiceListContainer}>\r\n            <Text style={styles.choiceListTitle}>{props.title}</Text>\r\n            <ChoiceList\r\n                getCurrentChoice={props.getCurrentChoice}\r\n                setCurrentChoice={props.setCurrentChoice}\r\n                array={props.array}\r\n\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default TitledChoiceList;\r\nconst styles = StyleSheet.create({\r\n    choiceListTitle: {\r\n        flex: 1,\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    },\r\n    choiceListContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'dodgerblue',\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        alignItems: 'center'\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}