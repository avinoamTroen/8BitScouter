{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CoumterTracker(props) {\n  var _useState = useState(props.getCurrentCount()),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  countInc = function countInc() {\n    var res = count + 1;\n    props.setCurrentCount(res);\n    setCount(props.getCurrentCount());\n  };\n\n  countDec = function countDec() {\n    var res = count - 1;\n\n    if (res < 0) {\n      res = 0;\n    }\n\n    props.setCurrentCount(res);\n    setCount(props.getCurrentCount());\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: props.title\n    }), _jsxs(View, {\n      style: {\n        flex: 3,\n        flexDirection: 'row-reverse'\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: countInc,\n        children: _jsx(Text, {\n          style: styles.bigText,\n          children: \"+\"\n        })\n      }), _jsx(Text, {\n        style: styles.midText,\n        children: count\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: countDec,\n        children: _jsx(Text, {\n          style: styles.bigText,\n          children: \"-\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 5,\n    width: '100%',\n    backgroundColor: 'ivory',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  header: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: '#0a0',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    textAlign: 'center',\n    textAlignVertical: \"center\",\n    fontWeight: 'bold',\n    fontSize: 25,\n    marginTop: 0\n  },\n  bigText: {\n    flex: 2,\n    textAlign: 'center',\n    textAlignVertical: \"center\",\n    fontWeight: 'bold',\n    fontSize: 100\n  },\n  midText: {\n    flex: 2,\n    textAlign: 'center',\n    textAlignVertical: \"center\",\n    fontWeight: 'bold',\n    fontSize: 50\n  },\n  button: {\n    flex: 3,\n    backgroundColor: 'indigo',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: 'black',\n    borderWidth: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/myComponents/CounterTracker.js"],"names":["useState","React","CoumterTracker","props","getCurrentCount","count","setCount","countInc","res","setCurrentCount","countDec","styles","container","header","title","flex","flexDirection","button","bigText","midText","StyleSheet","create","width","backgroundColor","alignItems","justifyContent","textAlign","textAlignVertical","fontWeight","fontSize","marginTop","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity\r\n} from 'react-native';\r\nimport React from 'react';\r\n\r\n\r\nexport default function CoumterTracker(props) {\r\n    const [count, setCount] = useState(props.getCurrentCount());\r\n\r\n    countInc = () => {\r\n        let res = count + 1;\r\n        props.setCurrentCount(res)\r\n        setCount(props.getCurrentCount());\r\n    };\r\n\r\n    countDec = () => {\r\n        let res = count - 1\r\n        if (res < 0) {\r\n            res = 0\r\n        }\r\n        props.setCurrentCount(res)\r\n        setCount(props.getCurrentCount());\r\n    };\r\n\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n            <Text style={styles.header}>{props.title}</Text>\r\n            <View style={{ flex: 3, flexDirection: 'row-reverse', }}>\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={countInc}\r\n                >\r\n                    <Text style={styles.bigText}>+</Text>\r\n                </TouchableOpacity>\r\n                <Text style={styles.midText}>{count}</Text>\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={countDec}\r\n                >\r\n                    <Text style={styles.bigText}>-</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 5,\r\n        width: '100%',\r\n        backgroundColor: 'ivory',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        width: '100%',\r\n        backgroundColor: '#0a0',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',\r\n        textAlign: 'center',\r\n        textAlignVertical: \"center\",\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        marginTop: 0,\r\n    },\r\n    bigText: {\r\n        flex: 2,\r\n        textAlign: 'center',\r\n        textAlignVertical: \"center\",\r\n        fontWeight: 'bold',\r\n        fontSize: 100,\r\n    },\r\n    midText: {\r\n        flex: 2,\r\n        textAlign: 'center',\r\n        textAlignVertical: \"center\",\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n    },\r\n    button: {\r\n        flex: 3,\r\n        backgroundColor: 'indigo',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderColor: 'black',\r\n        borderWidth: 3\r\n    },\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}