{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TitledSwitch = function TitledSwitch(props) {\n  var _useState = useState(props.getTruth()),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTrue = _useState2[0],\n      setIsTrue = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    props.setTruth(!isTrue);\n    setIsTrue(props.getTruth());\n  };\n\n  return _jsxs(View, {\n    style: styles.titledSwitchContainer,\n    children: [_jsx(Text, {\n      style: styles.choiceListTitle,\n      children: props.title\n    }), _jsx(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isTrue ? \"#f5dd4b\" : \"#f4f3f4\",\n      onValueChange: toggleSwitch,\n      value: isTrue\n    })]\n  });\n};\n\nexport default TitledSwitch;\nvar styles = StyleSheet.create({\n  choiceListTitle: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  titledSwitchContainer: {\n    flex: 1,\n    backgroundColor: 'dodgerblue',\n    borderColor: 'black',\n    borderWidth: 2,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/myComponents/TitledSwitch.js"],"names":["React","useState","TitledSwitch","props","getTruth","isTrue","setIsTrue","toggleSwitch","setTruth","styles","titledSwitchContainer","choiceListTitle","title","false","true","StyleSheet","create","flex","fontSize","fontWeight","backgroundColor","borderColor","borderWidth","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,kBAA4BF,QAAQ,CAACE,KAAK,CAACC,QAAN,EAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBJ,IAAAA,KAAK,CAACK,QAAN,CAAe,CAACH,MAAhB;AACAC,IAAAA,SAAS,CAACH,KAAK,CAACC,QAAN,EAAD,CAAT;AACH,GAHD;;AAIA,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAEK,MAAM,CAACC,qBADlB;AAAA,eAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA,gBAAsCR,KAAK,CAACS;AAA5C,MAFJ,EAGI,KAAC,MAAD;AACI,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OADhB;AAEI,MAAA,UAAU,EAAET,MAAM,GAAG,SAAH,GAAe,SAFrC;AAGI,MAAA,aAAa,EAAEE,YAHnB;AAII,MAAA,KAAK,EAAEF;AAJX,MAHJ;AAAA,IADJ;AAcH,CApBD;;AAsBA,eAAeH,YAAf;AACA,IAAMO,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,eAAe,EAAE;AACbM,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,QAAQ,EAAE,EAFG;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADY;AAM7BT,EAAAA,qBAAqB,EAAE;AACnBO,IAAAA,IAAI,EAAE,CADa;AAEnBG,IAAAA,eAAe,EAAE,YAFE;AAGnBC,IAAAA,WAAW,EAAE,OAHM;AAInBC,IAAAA,WAAW,EAAE,CAJM;AAKnBC,IAAAA,UAAU,EAAE;AALO;AANM,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, Switch } from \"react-native\";\r\n\r\nconst TitledSwitch = (props) => {\r\n    const [isTrue, setIsTrue] = useState(props.getTruth())\r\n    const toggleSwitch = () => {\r\n        props.setTruth(!isTrue)\r\n        setIsTrue(props.getTruth())\r\n    }\r\n    return (\r\n        <View\r\n            style={styles.titledSwitchContainer}>\r\n            <Text style={styles.choiceListTitle}>{props.title}</Text>\r\n            <Switch\r\n                trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n                thumbColor={isTrue ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n                onValueChange={toggleSwitch}\r\n                value={isTrue}\r\n\r\n\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default TitledSwitch;\r\nconst styles = StyleSheet.create({\r\n    choiceListTitle: {\r\n        flex: 1,\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    },\r\n    titledSwitchContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'dodgerblue',\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        alignItems: 'center'\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}