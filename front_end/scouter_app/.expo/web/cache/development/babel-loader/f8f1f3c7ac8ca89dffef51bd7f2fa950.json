{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport sendOneScout from \"../networking/send_things\";\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport store from \"../my_redux/store\";\nimport getCurrentDateTime from \"../utils/myDateTime\";\nimport { Swipeable } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var goToPreGame = function goToPreGame() {\n    navigation.navigate('PreGame');\n  };\n\n  var goToAuto = function goToAuto() {\n    navigation.navigate('Auto');\n  };\n\n  var goToAfterAuto = function goToAfterAuto() {\n    navigation.navigate('AfterAuto');\n  };\n\n  var goToTele = function goToTele() {\n    navigation.navigate('TeleOp');\n  };\n\n  var goToEndGame = function goToEndGame() {\n    navigation.navigate('EndGame');\n  };\n\n  var goToPostGame = function goToPostGame() {\n    navigation.navigate('PostGame');\n  };\n\n  var runTestConnection1 = function runTestConnection1() {\n    var thing;\n    return _regeneratorRuntime.async(function runTestConnection1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            thing = {\n              a: 'a',\n              b: 'b',\n              c: 78,\n              d: 50.0,\n              e: 'explanation'\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(sendOneScout(thing));\n\n          case 3:\n            res = _context.sent;\n\n            if (res.successful) {\n              setTitle(res.msg);\n              console.log('home: successful');\n            } else {\n              setTitle(\"error: \" + res.msg);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var runTestConnection2 = function runTestConnection2() {\n    return _regeneratorRuntime.async(function runTestConnection2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(sendOneScout(store.getState()));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var printDate = function printDate() {\n    console.log(getCurrentDateTime());\n    console.log(typeof getCurrentDateTime());\n  };\n\n  return _jsx(Swipeable, {\n    renderLeftActions: function renderLeftActions() {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          children: \"left\"\n        })\n      });\n    },\n    renderRightActions: function renderRightActions() {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          children: \"right\"\n        })\n      });\n    },\n    onSwipeableLeftOpen: function onSwipeableLeftOpen() {\n      return console.log(\"Test swipe left\");\n    },\n    onSwipeableRightOpen: function onSwipeableRightOpen() {\n      return console.log(\"Test swipe right\");\n    },\n    children: _jsxs(View, {\n      children: [_jsx(Button, {\n        title: \"Pre Game\",\n        onPress: goToPreGame\n      }), _jsx(Button, {\n        title: \"Auto\",\n        onPress: goToAuto\n      }), _jsx(Button, {\n        title: \"AfterAuto\",\n        onPress: goToAfterAuto\n      }), _jsx(Button, {\n        title: \"Tele\",\n        onPress: goToTele\n      }), _jsx(Button, {\n        title: \"End Game\",\n        onPress: goToEndGame\n      }), _jsx(Button, {\n        title: \"Post Game\",\n        onPress: goToPostGame\n      }), _jsx(Button, {\n        title: \"1) send post message to server\",\n        onPress: runTestConnection1\n      }), _jsxs(Text, {\n        children: [\"txt = \", title]\n      }), _jsx(Button, {\n        title: \"2) send post currentScout to server\",\n        onPress: runTestConnection2\n      }), _jsx(Button, {\n        title: \"3) printDate\",\n        onPress: printDate\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log(store.getState());\n        },\n        children: _jsx(Text, {\n          children: \"press to print state\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/screens/home.js"],"names":["sendOneScout","React","useState","store","getCurrentDateTime","Swipeable","Home","navigation","title","setTitle","goToPreGame","navigate","goToAuto","goToAfterAuto","goToTele","goToEndGame","goToPostGame","runTestConnection1","thing","a","b","c","d","e","res","successful","msg","console","log","runTestConnection2","getState","printDate"],"mappings":"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","sourcesContent":["import sendOneScout from '../networking/send_things';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { View, Text, Button, TouchableOpacity } from 'react-native';\r\nimport store from '../my_redux/store';\r\nimport getCurrentDateTime from '../utils/myDateTime';\r\nimport { Swipeable } from 'react-native-gesture-handler';\r\n\r\nexport default function Home({ navigation }) {\r\n    const [title, setTitle] = useState();\r\n    const goToPreGame = () => {\r\n        navigation.navigate('PreGame');\r\n    }\r\n    const goToAuto = () => {\r\n        navigation.navigate('Auto');\r\n    }\r\n    const goToAfterAuto = () => {\r\n        navigation.navigate('AfterAuto');\r\n    }\r\n    const goToTele = () => {\r\n        navigation.navigate('TeleOp');\r\n    }\r\n    const goToEndGame = () => {\r\n        navigation.navigate('EndGame');\r\n    }\r\n    const goToPostGame = () => {\r\n        navigation.navigate('PostGame');\r\n    }\r\n\r\n\r\n    const runTestConnection1 = async () => {\r\n        const thing = { a: 'a', b: 'b', c: 78, d: 50.0, e: 'explanation' }\r\n        res = await sendOneScout(thing)\r\n        if (res.successful) { setTitle(res.msg); console.log('home: successful'); }\r\n        else { setTitle(\"error: \" + res.msg) }\r\n    }\r\n    const runTestConnection2 = async () => {\r\n        res = await sendOneScout(store.getState());\r\n    }\r\n    const printDate = () => {\r\n        console.log(getCurrentDateTime())\r\n        console.log(typeof getCurrentDateTime())\r\n    }\r\n\r\n    return (\r\n        <Swipeable\r\n            renderLeftActions={() => <View><Text>left</Text></View>}\r\n            renderRightActions={() => <View><Text>right</Text></View>}\r\n\r\n            onSwipeableLeftOpen={() => console.log(\"Test swipe left\")}\r\n            onSwipeableRightOpen={() => console.log(\"Test swipe right\")}>\r\n\r\n            <View >\r\n                <Button title='Pre Game' onPress={goToPreGame} />\r\n                <Button title='Auto' onPress={goToAuto} />\r\n                <Button title='AfterAuto' onPress={goToAfterAuto} />\r\n                <Button title='Tele' onPress={goToTele} />\r\n                <Button title='End Game' onPress={goToEndGame} />\r\n                <Button title='Post Game' onPress={goToPostGame} />\r\n\r\n                <Button title='1) send post message to server' onPress={runTestConnection1} />\r\n                <Text>txt = {title}</Text>\r\n                <Button title='2) send post currentScout to server' onPress={runTestConnection2} />\r\n                <Button title='3) printDate' onPress={printDate} />\r\n                <TouchableOpacity onPress={() => console.log(store.getState())}><Text>press to print state</Text></TouchableOpacity>\r\n\r\n\r\n            </View>\r\n        </Swipeable>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}