{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport store from \"../my_redux/store\";\nimport { Formats } from \"../styles\";\nimport TopNav from \"../myComponents/TopNav\";\nimport TitledSwitch from \"../myComponents/TitledSwitch\";\nimport TitledTextInput from \"../myComponents/TitledTextInput\";\nimport { setAutoMalfunction, setPassedLine, setBallsHumanShotAuto, setBallsHumanScoredAuto, setAutoFreeText } from \"../my_redux/currentScouterActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AfterAuto(_ref) {\n  var navigation = _ref.navigation;\n\n  var goToNext = function goToNext() {\n    navigation.navigate('TeleOp');\n  };\n\n  var goToHome = function goToHome() {\n    navigation.navigate('Home');\n  };\n\n  var goBack = function goBack() {\n    navigation.navigate('Auto');\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TopNav, {\n      goBack: goBack,\n      goToHome: goToHome\n    }), _jsxs(View, {\n      style: styles.EnglishLineContainer,\n      children: [_jsx(TitledSwitch, {\n        title: 'Robot Went Crazy',\n        setTruth: function setTruth(isTrue) {\n          return store.dispatch(setAutoMalfunction(isTrue));\n        },\n        getTruth: function getTruth() {\n          return store.getState().currentScout.autoMalfunction;\n        }\n      }), _jsx(TitledSwitch, {\n        title: 'Robot Passed Line',\n        setTruth: function setTruth(isTrue) {\n          return store.dispatch(setPassedLine(isTrue));\n        },\n        getTruth: function getTruth() {\n          return store.getState().currentScout.passedLine;\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.EnglishLineContainer,\n      children: [_jsx(TitledSwitch, {\n        title: 'Human Tried To Shoot',\n        setTruth: function setTruth(isTrue) {\n          return store.dispatch(setBallsHumanShotAuto(isTrue));\n        },\n        getTruth: function getTruth() {\n          return store.getState().currentScout.ballsHumanShotAuto;\n        }\n      }), _jsx(TitledSwitch, {\n        title: 'Human Scored',\n        setTruth: function setTruth(isTrue) {\n          return store.dispatch(setBallsHumanScoredAuto(isTrue));\n        },\n        getTruth: function getTruth() {\n          return store.getState().currentScout.ballsHumanScoredAuto;\n        }\n      })]\n    }), _jsx(TitledTextInput, {\n      setText: function setText(newText) {\n        return store.dispatch(setAutoFreeText(newText));\n      },\n      getText: function getText() {\n        return store.getState().currentScout.autoFreeText;\n      },\n      placeholder: \"write here...\",\n      title: \"Free Text On Auto\"\n    }), _jsx(TouchableOpacity, {\n      style: Formats.nextButton,\n      onPress: goToNext,\n      children: _jsx(Text, {\n        style: Formats.nextButtonText,\n        children: \"Next\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  EnglishLineContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    flex: 1\n  },\n  regularText: {\n    flexWrap: 'wrap',\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/screens/afterAuto.js"],"names":["React","useState","store","Formats","TopNav","TitledSwitch","TitledTextInput","setAutoMalfunction","setPassedLine","setBallsHumanShotAuto","setBallsHumanScoredAuto","setAutoFreeText","AfterAuto","navigation","goToNext","navigate","goToHome","goBack","flex","styles","EnglishLineContainer","isTrue","dispatch","getState","currentScout","autoMalfunction","passedLine","ballsHumanShotAuto","ballsHumanScoredAuto","newText","autoFreeText","nextButton","nextButtonText","StyleSheet","create","alignItems","flexDirection","regularText","flexWrap"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\r\nimport store from '../my_redux/store';\r\nimport { Formats } from '../styles';\r\nimport TopNav from '../myComponents/TopNav';\r\nimport TitledSwitch from '../myComponents/TitledSwitch';\r\nimport TitledTextInput from '../myComponents/TitledTextInput';\r\nimport { setAutoMalfunction, setPassedLine, setBallsHumanShotAuto, setBallsHumanScoredAuto, setAutoFreeText } from '../my_redux/currentScouterActions'\r\n\r\nexport default function AfterAuto({ navigation }) {\r\n    // navigation \r\n    const goToNext = () => {\r\n        navigation.navigate('TeleOp');\r\n    }\r\n    const goToHome = () => {\r\n        navigation.navigate('Home');\r\n    }\r\n    const goBack = () => {\r\n        navigation.navigate('Auto');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <TopNav\r\n                goBack={goBack}\r\n                goToHome={goToHome}\r\n            />\r\n\r\n            <View style={styles.EnglishLineContainer}>\r\n                <TitledSwitch\r\n                    title={'Robot Went Crazy'}\r\n                    setTruth={(isTrue) => store.dispatch(setAutoMalfunction(isTrue))}\r\n                    getTruth={() => store.getState().currentScout.autoMalfunction}\r\n                />\r\n                <TitledSwitch\r\n                    title={'Robot Passed Line'}\r\n                    setTruth={(isTrue) => store.dispatch(setPassedLine(isTrue))}\r\n                    getTruth={() => store.getState().currentScout.passedLine}\r\n                />\r\n\r\n            </View>\r\n\r\n\r\n            <View style={styles.EnglishLineContainer}>\r\n                <TitledSwitch\r\n                    title={'Human Tried To Shoot'}\r\n                    setTruth={(isTrue) => store.dispatch(setBallsHumanShotAuto(isTrue))}\r\n                    getTruth={() => store.getState().currentScout.ballsHumanShotAuto}\r\n                />\r\n                <TitledSwitch\r\n                    title={'Human Scored'}\r\n                    setTruth={(isTrue) => store.dispatch(setBallsHumanScoredAuto(isTrue))}\r\n                    getTruth={() => store.getState().currentScout.ballsHumanScoredAuto}\r\n                />\r\n            </View>\r\n\r\n            <TitledTextInput\r\n                setText={(newText) => store.dispatch(setAutoFreeText(newText))}\r\n                getText={() => store.getState().currentScout.autoFreeText}\r\n                placeholder=\"write here...\"\r\n                title=\"Free Text On Auto\"\r\n            />\r\n\r\n            <TouchableOpacity\r\n                style={Formats.nextButton}\r\n                onPress={goToNext}\r\n            ><Text style={Formats.nextButtonText}>Next</Text></TouchableOpacity>\r\n\r\n\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    EnglishLineContainer: {\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        flex: 1\r\n    },\r\n    regularText: {\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}