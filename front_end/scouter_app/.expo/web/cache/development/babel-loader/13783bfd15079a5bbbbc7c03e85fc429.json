{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TitledNumInput = function TitledNumInput(props) {\n  var _useState = useState(props.getNum().toString()),\n      _useState2 = _slicedToArray(_useState, 2),\n      num = _useState2[0],\n      localSetNum = _useState2[1];\n\n  var onChangeNum = function onChangeNum(newNum) {\n    if (typeof parseFloat(newNum) != \"number\") {\n      console.log('titled num: not number');\n      props.setNum(0);\n      localSetNum('');\n    } else {\n      newNum = parseFloat(newNum);\n      props.setNum(newNum);\n      localSetNum(props.getNum().toString());\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.textInputContainer,\n    children: [_jsx(Text, {\n      style: styles.textInputTitle,\n      children: props.title\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeNum,\n      value: num,\n      keyboardType: \"numeric\"\n    })]\n  });\n};\n\nexport default TitledNumInput;\nvar styles = StyleSheet.create({\n  textInputTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    height: 35\n  },\n  textInputContainer: {\n    flex: 1,\n    backgroundColor: 'green',\n    borderColor: 'black',\n    borderWidth: 2,\n    alignItems: 'center'\n  },\n  input: {\n    margin: 12,\n    padding: 10,\n    flex: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/avino/OneDrive/Desktop/8bit_scouting/front_end/scouter_app/app/myComponents/TitledNumInput.js"],"names":["React","useState","TitledNumInput","props","getNum","toString","num","localSetNum","onChangeNum","newNum","parseFloat","console","log","setNum","styles","textInputContainer","textInputTitle","title","input","StyleSheet","create","fontSize","fontWeight","height","flex","backgroundColor","borderColor","borderWidth","alignItems","margin","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,kBAA2BF,QAAQ,CAACE,KAAK,CAACC,MAAN,GAAeC,QAAf,EAAD,CAAnC;AAAA;AAAA,MAAOC,GAAP;AAAA,MAAYC,WAAZ;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5B,QAAI,OAAOC,UAAU,CAACD,MAAD,CAAjB,IAA6B,QAAjC,EAA2C;AACvCE,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAT,MAAAA,KAAK,CAACU,MAAN,CAAa,CAAb;AACAN,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KAJD,MAKK;AACDE,MAAAA,MAAM,GAAGC,UAAU,CAACD,MAAD,CAAnB;AACAN,MAAAA,KAAK,CAACU,MAAN,CAAaJ,MAAb;AACAF,MAAAA,WAAW,CAACJ,KAAK,CAACC,MAAN,GAAeC,QAAf,EAAD,CAAX;AACH;AAEJ,GAZD;;AAaA,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAES,MAAM,CAACC,kBADlB;AAAA,eAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,gBAAqCb,KAAK,CAACc;AAA3C,MAFJ,EAGI,KAAC,SAAD;AACI,MAAA,KAAK,EAAEH,MAAM,CAACI,KADlB;AAEI,MAAA,YAAY,EAAEV,WAFlB;AAGI,MAAA,KAAK,EAAEF,GAHX;AAII,MAAA,YAAY,EAAC;AAJjB,MAHJ;AAAA,IADJ;AAYH,CA3BD;;AA6BA,eAAeJ,cAAf;AACA,IAAMY,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,cAAc,EAAE;AACZK,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,UAAU,EAAE,MAFA;AAGZC,IAAAA,MAAM,EAAE;AAHI,GADa;AAM7BR,EAAAA,kBAAkB,EAAE;AAChBS,IAAAA,IAAI,EAAE,CADU;AAEhBC,IAAAA,eAAe,EAAE,OAFD;AAGhBC,IAAAA,WAAW,EAAE,OAHG;AAIhBC,IAAAA,WAAW,EAAE,CAJG;AAKhBC,IAAAA,UAAU,EAAE;AALI,GANS;AAc7BV,EAAAA,KAAK,EAAE;AACHW,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHN,IAAAA,IAAI,EAAE;AAHH;AAdsB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, TextInput } from \"react-native\";\r\n\r\nconst TitledNumInput = (props) => {\r\n    const [num, localSetNum] = useState(props.getNum().toString());\r\n    const onChangeNum = (newNum) => {\r\n        if (typeof parseFloat(newNum) != \"number\") {\r\n            console.log('titled num: not number')\r\n            props.setNum(0);\r\n            localSetNum('')\r\n        }\r\n        else {\r\n            newNum = parseFloat(newNum)\r\n            props.setNum(newNum);\r\n            localSetNum(props.getNum().toString());\r\n        }\r\n\r\n    }\r\n    return (\r\n        <View\r\n            style={styles.textInputContainer}>\r\n            <Text style={styles.textInputTitle}>{props.title}</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={onChangeNum}\r\n                value={num}\r\n                keyboardType=\"numeric\"\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default TitledNumInput;\r\nconst styles = StyleSheet.create({\r\n    textInputTitle: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        height: 35\r\n    },\r\n    textInputContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        alignItems: 'center'\r\n\r\n    },\r\n    input: {\r\n        margin: 12,\r\n        padding: 10,\r\n        flex: 3\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}